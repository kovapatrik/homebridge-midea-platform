{
  "pluginAlias": "midea-platform",
  "pluginType": "platform",
  "customUi": true,
  "headerDisplay": "This plugin is currently experimental and under development.  Please report [bugs](https://github.com/kovapatrik/homebridge-midea-platform/issues)",
  "footerDisplay": "For help please see the [homepage](https://github.com/kovapatrik/homebridge-midea-platform)",
  "singular": true,
  "schema": {
    "type": "object",
    "properties": {
      "refreshInterval": {
        "title": "Interval, in seconds, to query Midea devices for state",
        "type": "number",
        "minimum": 0,
        "maximum": 86400,
        "description": "Frequency that the plugin will query devices for their current state (temperature, humidity, etc.). Some Midea devices update the plugin automatically on any change, others require that the device is queried. The default is 30 seconds, the maximum is 86400 (24 hours). Setting value to 0 (zero) disables polling and updates will only be noted if devices sends it automatically."
      },
      "heartbeatInterval": {
        "title": "Interval, in seconds, to send keep-alive message to Midea devices",
        "type": "number",
        "minimum": 10,
        "maximum": 120,
        "description": "Frequency that the plugin sends a message to Midea devices to keep the network socket open. The default and minimum is 10 seconds, you can increase this up to a maximum of 120 (2 minutes). If you see socket closed messages in the log reduce this value."
      },
      "uiDebug": {
        "title": "Enable debug for the custom UI (including device discovery)",
        "type": "boolean",
        "description": "Debug data for the custom UI device discovery process will be logged to the Homebridge log and Javascript console."
      },
      "devices": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "title": "Device Type",
              "type": "string",
              "required": true,
              "enum": [
                "Air Conditioner",
                "Dehumidifier",
                "Dishwasher",
                "Electric Water Heater",
                "Fan",
                "Fresh Air Appliance",
                "Front Load Washer",
                "Gas Water Heater",
                "Heat Pump Water Heater",
                "Heat Pump WiFi Controller",
                "Humidifier"
              ],
              "description": "Select the type of device you are adding."
            },
            "name": {
              "title": "Device Name",
              "description": "This replaces the name provided by the Midea device.",
              "type": "string"
            },
            "id": {
              "title": "Device Identifier",
              "type": "number",
              "required": true,
              "description": "The ID of the device. This shouldn't be changed if it was added by discovery."
            },
            "advanced_options": {
              "type": "object",
              "title": "Advanced Settings",
              "expandable": true,
              "expanded": false,
              "properties": {
                "ip": {
                  "title": "IP Address",
                  "type": "string",
                  "required": false,
                  "description": "IP address of device on your local LAN. This is optional and shouldn't be changed if it was added by discovery."
                },
                "token": {
                  "title": "Device login token",
                  "type": "string",
                  "description": "Token of the device obtained from cloud. This shouldn't be changed if it was added by discovery."
                },
                "key": {
                  "title": "Device login key",
                  "type": "string",
                  "description": "Key of the device obtained from cloud. This shouldn't be changed if it was added by discovery."
                },
                "verbose": {
                  "title": "Enable verbose logging",
                  "type": "boolean",
                  "description": "Enables additional debug logging that may help a developer identify problems when working on Midea device support. Homebridge must be running with debug enabled for any debug logging to be visible."
                },
                "logRecoverableErrors": {
                  "title": "Log recoverable errors",
                  "type": "boolean",
                  "description": "If you see frequent warning or error messages in the log that the plugin recovers from you can suppress these messages by disabling this setting."
                },
                "logRefreshStatusErrors": {
                  "title": "Log refresh status errors",
                  "type": "boolean",
                  "description": "If you see warning and errors which are related to the refresh status process you can suppress these messages by disabling this setting. (e.g.: `Does not supports the protocol...`)"
                }
              }
            },
            "A1_options": {
              "title": "Dehumidifier Options",
              "type": "object",
              "condition": {
                "functionBody": "return model.devices && model.devices[arrayIndices].type === 'Dehumidifier';"
              },
              "properties": {
                "temperatureSensor": {
                  "title": "Temperature Sensor",
                  "description": "Toggles if the temperature sensor is created with the accessory.",
                  "type": "boolean"
                },
                "fanAccessory": {
                  "title": "Fan Accessory",
                  "description": "Toggles if the fan accessory is created with the accessory.",
                  "type": "boolean"
                },
                "humiditySensor": {
                  "title": "Humidity Sensor",
                  "description": "Toggles if a seperated humidity sensor is created with the accessory. This sensor can be used for autmations as for some reason the internal humidity sensor is not usable for this.",
                  "type": "boolean"
                },
                "pumpSwitch": {
                  "title": "Pump Switch",
                  "description": "Toggles if the pump switch is created with the accessory.",
                  "type": "boolean"
                },
                "waterTankSensor": {
                  "title": "Water Tank Sensor",
                  "description": "Creates a water tank sensor accessory which can be used to trigger automations when the tank is full. The sensor will show as `Leak Sensor` or `Contact Sensor` depending on this setting.",
                  "type": "string",
                  "required": true,
                  "enum": ["None", "Leak Sensor", "Contact Sensor"]
                },
                "minHumidity": {
                  "title": "Minimum Relative Humidity",
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "maxHumidity": {
                  "title": "Maximum Relative Humidity",
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "humidityStep": {
                  "title": "Humidity Step",
                  "type": "number",
                  "required": true,
                  "enum": [5, 10]
                },
                "humidityOffset": {
                  "title": "Humidity Offset",
                  "description": "Offset for the humidity sensor. This is useful if the humidity sensor is not accurate or if you want to adjust the humidity value.",
                  "type": "number",
                  "required": true
                }
              }
            },
            "AC_options": {
              "title": "Air Conditioner Options",
              "type": "object",
              "condition": {
                "functionBody": "return model.devices && model.devices[arrayIndices].type === 'Air Conditioner';"
              },
              "properties": {
                "swing": {
                  "type": "object",
                  "title": "Swing Options",
                  "properties": {
                    "mode": {
                      "title": "Swing Mode",
                      "description": "Set swing mode of the unit. If your unit does not support this feature then leave it on None.",
                      "type": "string",
                      "required": true,
                      "enum": ["None", "Vertical", "Horizontal", "Both"]
                    },
                    "angleAccessory": {
                      "title": "Swing Angle Accessory",
                      "description": "Toggles if the swing angle accessory is created with the accessory. The accessory can be used to set the angle of the slat to a specified value. The `mode` property will be used to determine the direction of the slat. The main position bar will be used to set the angle of the direction which is selected in the `mode` property.",
                      "type": "boolean"
                    },
                    "angleMainControl": {
                      "title": "Swing Angle Main Control",
                      "description": "If `mode` property is Both and the swing angle accessory is enabled, this property will be used to determine which direction will be controlled by the main position bar of the accessory.",
                      "type": "string",
                      "required": true,
                      "enum": ["Vertical", "Horizontal"]
                    }
                  }
                },
                "heatingCapable": {
                  "title": "Heating Capability",
                  "description": "Toggles if heating is enabled on the accessory. If your unit does not support heating then leave this off.",
                  "type": "boolean"
                },
                "outDoorTemp": {
                  "title": "Outdoor Temperature",
                  "description": "Toggles if the outdoor temperature is created with the accessory.",
                  "type": "boolean"
                },
                "audioFeedback": {
                  "title": "Audio Feedback",
                  "description": "Toggles if the unit beeps when a command is sent.",
                  "type": "boolean"
                },
                "screenOff": {
                  "title": "Diplay screen off by default",
                  "description": "Toggles if the screen is turned off by default when the unit is turned on.",
                  "type": "boolean"
                },
                "ecoSwitch": {
                  "title": "Eco Mode Switch",
                  "description": "Toggles if the ECO mode switch is created with the accessory.",
                  "type": "boolean"
                },
                "dryModeSwitch": {
                  "title": "Dry Mode Switch",
                  "description": "Toggles if the dry mode switch is created with the accessory.",
                  "type": "boolean"
                },
                "boostModeSwitch": {
                  "title": "Boost/Turbo Mode Switch",
                  "description": "Toggles if the boost/turbo mode switch is created with the accessory.",
                  "type": "boolean"
                },
                "breezeAwaySwitch": {
                  "title": "Breeze Away Mode",
                  "description": "Toggles if the breeze away mode swtich is created with the accessory.",
                  "type": "boolean"
                },
                "displaySwitch": {
                  "type": "object",
                  "properties": {
                    "flag": {
                      "title": "Display Switch",
                      "description": "Toggles if a switch, which can turn the display on or off will be created or not.",
                      "type": "boolean"
                    },
                    "command": {
                      "title": "Display Switch Alternate Command",
                      "description": "Use this if the switch display command does not work. If it doesn't work either way then you unit does not support this feature.",
                      "type": "boolean"
                    }
                  }
                },
                "auxHeatingSwitches": {
                  "title": "Auxiliary Heating Switches",
                  "description": "Toggles if the aux and aux+heat switches are created with the accessory.",
                  "type": "boolean"
                },
                "selfCleanSwitch": {
                  "title": "Self-cleaning Switch",
                  "description": "Toggles if the self-cleaning switch is created with the accessory.",
                  "type": "boolean"
                },
                "ionSwitch": {
                  "title": "ION Switch",
                  "descriptION": "Toggles if the ION switch is created with the accessory.",
                  "type": "boolean"
                },
                "rateSelector": {
                  "title": "Gear / Rate Selector",
                  "description": "Toggles if the gear / rate selector is created with the accessory.",
                  "type": "boolean"
                },
                "minTemp": {
                  "title": "Minimum Temperature (°C)",
                  "type": "number"
                },
                "maxTemp": {
                  "title": "Maximum Temperature (°C)",
                  "type": "number"
                },
                "tempStep": {
                  "title": "Temperature Step (°C)",
                  "type": "number",
                  "required": true,
                  "enum": [0.5, 1]
                },
                "fahrenheit": {
                  "title": "Fahrenheit",
                  "description": "Toggles if the temperature on the unit is displayed in Fahrenheit or Celsius.",
                  "type": "boolean"
                },
                "fanOnlyModeSwitch": {
                  "title": "Fan Only Mode Switch",
                  "description": "Toggles if the fan only mode switch is created with the accessory.",
                  "type": "boolean"
                },
                "fanAccessory": {
                  "title": "Fan Accessory",
                  "description": "Toggles if the fan accessory is created with the accessory.",
                  "type": "boolean"
                },
                "sleepModeSwitch": {
                  "title": "Sleep Mode Switch",
                  "description": "Toggles if the sleep mode switch is created with the accessory.",
                  "type": "boolean"
                },
                "comfortModeSwitch": {
                  "title": "Comfort Mode Switch",
                  "description": "Toggles if the comfort mode switch is created with the accessory.",
                  "type": "boolean"
                }
              }
            },
            "C3_options": {
              "title": "Heat Pump WiFi Controller Options",
              "type": "object",
              "condition": {
                "functionBody": "return model.devices && model.devices[arrayIndices].type === 'Heat Pump WiFi Controller';"
              },
              "properties": {
                "zone1": {
                  "title": "Zone 1 accessory",
                  "description": "Toggles if the zone 1 accessory is created with the accessory.",
                  "type": "boolean"
                },
                "zone2": {
                  "title": "Zone 2 accessory",
                  "description": "Toggles if the zone 2 accessory is created with the accessory.",
                  "type": "boolean"
                },
                "waterHeater": {
                  "title": "Water Heater accessory",
                  "description": "Toggles if the water heater accessory is created with the accessory.",
                  "type": "boolean"
                },
                "ecoSwitch": {
                  "title": "Eco Mode Switch",
                  "description": "Toggles if the ECO mode switch is created with the accessory.",
                  "type": "boolean"
                },
                "silentSwitch": {
                  "title": "Silent Mode Switch",
                  "description": "Toggles if the silent mode switch is created with the accessory.",
                  "type": "boolean"
                },
                "tbhSwitch": {
                  "title": "TBH Mode Switch",
                  "description": "Toggles if the TBH mode switch is created with the accessory.",
                  "type": "boolean"
                },
                "disinfectSwitch": {
                  "title": "Disinfect Mode Switch",
                  "description": "Toggles if the disinfect mode switch is created with the accessory.",
                  "type": "boolean"
                }
              }
            },
            "CD_options": {
              "title": "Heat Pump Water Heater Options",
              "type": "object",
              "condition": {
                "functionBody": "return model.devices && model.devices[arrayIndices].type === 'Heat Pump Water Heater';"
              },
              "properties": {
                "minTemp": {
                  "title": "Minimum Temperature (°C)",
                  "type": "number"
                },
                "maxTemp": {
                  "title": "Maximum Temperature (°C)",
                  "type": "number"
                },
                "tempStep": {
                  "title": "Temperature Step (°C)",
                  "type": "number",
                  "required": true,
                  "enum": [0.5, 1]
                },
                "energySaveModeSwitch": {
                  "title": "Energy Save Mode Switch",
                  "description": "Toggles if the energy save mode switch is created with the accessory.",
                  "type": "boolean"
                },
                "standardModeSwitch": {
                  "title": "Standard Mode Switch",
                  "description": "Toggles if the standard mode switch is created with the accessory.",
                  "type": "boolean"
                },
                "eHeaterModeSwitch": {
                  "title": "E-Heater Mode Switch",
                  "description": "Toggles if the e-heater mode switch is created with the accessory.",
                  "type": "boolean"
                },
                "smartModeSwitch": {
                  "title": "Smart Mode Switch",
                  "description": "Toggles if the smart mode switch is created with the accessory.",
                  "type": "boolean"
                },
                "disinfectionSwitch": {
                  "title": "Disinfection Mode Switch",
                  "description": "Toggles if the disinfection mode switch is created with the accessory.",
                  "type": "boolean"
                }
              }
            },
            "CE_options": {
              "title": "Fresh Air Appliance Options",
              "type": "object",
              "condition": {
                "functionBody": "return model.devices && model.devices[arrayIndices].type === 'Fresh Air Appliance';"
              },
              "properties": {
                "silentMode": {
                  "title": "Silent Mode",
                  "description": "Toggles if the silent mode switch alongside the level slider is created with the accessory.",
                  "type": "boolean"
                },
                "minTemp": {
                  "title": "Minimum Temperature (°C)",
                  "type": "number"
                },
                "maxTemp": {
                  "title": "Maximum Temperature (°C)",
                  "type": "number"
                },
                "tempStep": {
                  "title": "Temperature Step (°C)",
                  "type": "number",
                  "required": true,
                  "enum": [0.5, 1]
                },
                "autoSetModeSwitch": {
                  "title": "Auto Set Mode Switch",
                  "description": "Toggles if the auto set mode switch is created with the accessory.",
                  "type": "boolean"
                }
              }
            },
            "DB_options": {
              "title": "Front Load Washer Options",
              "type": "object",
              "condition": {
                "functionBody": "return model.devices && model.devices[arrayIndices].type === 'Front Load Washer';"
              },
              "properties": {}
            },
            "E1_options": {
              "title": "Dishwasher Options",
              "type": "object",
              "condition": {
                "functionBody": "return model.devices && model.devices[arrayIndices].type === 'Dishwasher';"
              },
              "properties": {}
            },
            "E2_options": {
              "title": "Electric Water Heater Options",
              "type": "object",
              "condition": {
                "functionBody": "return model.devices && model.devices[arrayIndices].type === 'Electric Water Heater';"
              },
              "properties": {
                "protocol": {
                  "title": "Protocol",
                  "description": "Selects the protocol type of the water heater. Default to 'auto' which will try to detect the protocol automatically. Try to set this to 'old' or 'new' if the plugin is unable to communicate with the water heater.",
                  "type": "string",
                  "required": true,
                  "enum": ["auto", "old", "new"]
                },
                "minTemp": {
                  "title": "Minimum Temperature (°C)",
                  "type": "number"
                },
                "maxTemp": {
                  "title": "Maximum Temperature (°C)",
                  "type": "number"
                },
                "tempStep": {
                  "title": "Temperature Step (°C)",
                  "type": "number",
                  "required": true,
                  "enum": [0.5, 1]
                },
                "variableHeatingSwitch": {
                  "title": "Variable Heating Switch",
                  "description": "Toggles if the variable heating switch is created with the accessory.",
                  "type": "boolean"
                },
                "wholeTankHeatingSwitch": {
                  "title": "Whole Tank Heating Switch",
                  "description": "Toggles if the whole tank heating switch is created with the accessory.",
                  "type": "boolean"
                }
              }
            },
            "E3_options": {
              "title": "Gas Water Heater Options",
              "type": "object",
              "condition": {
                "functionBody": "return model.devices && model.devices[arrayIndices].type === 'Gas Water Heater';"
              },
              "properties": {
                "precisionHalves": {
                  "title": "Precision Halves",
                  "description": "Toggles if the temperature on the unit is displayed in half degrees.",
                  "type": "boolean"
                },
                "minTemp": {
                  "title": "Minimum Temperature (°C)",
                  "type": "number"
                },
                "maxTemp": {
                  "title": "Maximum Temperature (°C)",
                  "type": "number"
                },
                "tempStep": {
                  "title": "Temperature Step (°C)",
                  "type": "number",
                  "required": true,
                  "enum": [0.5, 1]
                },
                "burningStateSensor": {
                  "title": "Burning State Sensor",
                  "description": "Toggles if the burning state sensor is created with the accessory.",
                  "type": "boolean"
                },
                "protectionSensor": {
                  "title": "Protection Sensor",
                  "description": "Toggles if the protection sensor is created with the accessory.",
                  "type": "boolean"
                },
                "zeroColdWaterSwitch": {
                  "title": "Zero Cold Water Switch",
                  "description": "Toggles if the zero cold water switch is created with the accessory.",
                  "type": "boolean"
                },
                "zeroColdPulseSwitch": {
                  "title": "Zero Cold Pulse Switch",
                  "description": "Toggles if the zero cold pulse switch is created with the accessory.",
                  "type": "boolean"
                },
                "smartVolumeSwitch": {
                  "title": "Smart Volume Switch",
                  "description": "Toggles if the smart volume switch is created with the accessory.",
                  "type": "boolean"
                }
              }
            },
            "FA_options": {
              "title": "Fan Options",
              "type": "object",
              "condition": {
                "functionBody": "return model.devices && model.devices[arrayIndices].type === 'Fan';"
              },
              "properties": {}
            },
            "FD_options": {
              "title": "Humidifier Options",
              "type": "object",
              "condition": {
                "functionBody": "return model.devices && model.devices[arrayIndices].type === 'Humidifier';"
              },
              "properties": {}
            }
          }
        }
      }
    }
  },
  "layout": [
    {
      "items": [
        {
          "ref": "optional",
          "type": "fieldset",
          "expandable": true,
          "expanded": false,
          "title": "Optional Settings",
          "items": ["refreshInterval", "heartbeatInterval", "uiDebug"]
        },
        {
          "key": "devices",
          "type": "tabarray",
          "title": "{{ value.name || 'new device' }}",
          "items": [
            "devices[].type",
            "devices[].id",
            "devices[].name",
            {
              "key": "devices[].advanced_options",
              "title": "Advanced Settings",
              "expandable": true,
              "expanded": false,
              "items": [
                "devices[].advanced_options.ip",
                "devices[].advanced_options.token",
                "devices[].advanced_options.key",
                "devices[].advanced_options.verbose",
                "devices[].advanced_options.logRecoverableErrors",
                "devices[].advanced_options.logRefreshStatusErrors"
              ]
            },
            {
              "key": "devices[].A1_options",
              "expandable": true,
              "expanded": false,
              "items": [
                "devices[].A1_options.temperatureSensor",
                "devices[].A1_options.fanAccessory",
                "devices[].A1_options.humiditySensor",
                "devices[].A1_options.pumpSwitch",
                "devices[].A1_options.waterTankSensor",
                "devices[].A1_options.minHumidity",
                "devices[].A1_options.maxHumidity",
                "devices[].A1_options.humidityStep",
                "devices[].A1_options.humidityOffset"
              ]
            },
            {
              "key": "devices[].AC_options",
              "expandable": true,
              "expanded": false,
              "items": [
                {
                  "key": "devices[].AC_options.swing",
                  "items": [
                    "devices[].AC_options.swing.mode",
                    "devices[].AC_options.swing.angleAccessory",
                    "devices[].AC_options.swing.angleMainControl"
                  ]
                },
                "devices[].AC_options.heatingCapable",
                "devices[].AC_options.outDoorTemp",
                "devices[].AC_options.audioFeedback",
                "devices[].AC_options.screenOff",
                "devices[].AC_options.ecoSwitch",
                "devices[].AC_options.breezeAwaySwitch",
                "devices[].AC_options.dryModeSwitch",
                "devices[].AC_options.boostModeSwitch",
                "devices[].AC_options.auxHeatingSwitches",
                "devices[].AC_options.selfCleanSwitch",
                "devices[].AC_options.ionSwitch",
                "devices[].AC_options.rateSelector",
                {
                  "key": "devices[].AC_options.displaySwitch",
                  "items": [
                    "devices[].AC_options.displaySwitch.flag",
                    "devices[].AC_options.displaySwitch.command"
                  ]
                },
                "devices[].AC_options.minTemp",
                "devices[].AC_options.maxTemp",
                "devices[].AC_options.tempStep",
                "devices[].AC_options.fahrenheit",
                "devices[].AC_options.fanOnlyModeSwitch",
                "devices[].AC_options.fanAccessory",
                "devices[].AC_options.sleepModeSwitch",
                "devices[].AC_options.comfortModeSwitch"
              ]
            },
            {
              "key": "devices[].C3_options",
              "expandable": true,
              "expanded": false,
              "items": [
                "devices[].C3_options.zone1",
                "devices[].C3_options.zone2",
                "devices[].C3_options.waterHeater",
                "devices[].C3_options.ecoSwitch",
                "devices[].C3_options.silentSwitch",
                "devices[].C3_options.tbhSwitch",
                "devices[].C3_options.disinfectSwitch"
              ]
            },
            {
              "key": "devices[].CD_options",
              "expandable": true,
              "expanded": false,
              "items": [
                "devices[].CD_options.minTemp",
                "devices[].CD_options.maxTemp",
                "devices[].CD_options.tempStep",
                "devices[].CD_options.energySaveModeSwitch",
                "devices[].CD_options.standardModeSwitch",
                "devices[].CD_options.eHeaterModeSwitch",
                "devices[].CD_options.smartModeSwitch",
                "devices[].CD_options.disinfectionSwitch"
              ]
            },
            {
              "key": "devices[].CE_options",
              "expandable": true,
              "expanded": false,
              "items": [
                "devices[].CE_options.silentMode",
                "devices[].CE_options.minTemp",
                "devices[].CE_options.maxTemp",
                "devices[].CE_options.tempStep",
                "devices[].CE_options.autoSetModeSwitch"
              ]
            },
            {
              "key": "devices[].DB_options",
              "expandable": true,
              "expanded": false,
              "items": []
            },
            {
              "key": "devices[].E1_options",
              "expandable": true,
              "expanded": false,
              "items": []
            },
            {
              "key": "devices[].E2_options",
              "expandable": true,
              "expanded": false,
              "items": [
                "devices[].E2_options.protocol",
                "devices[].E2_options.variableHeatingSwitch",
                "devices[].E2_options.wholeTankHeatingSwitch",
                "devices[].E2_options.minTemp",
                "devices[].E2_options.maxTemp",
                "devices[].E2_options.tempStep"
              ]
            },
            {
              "key": "devices[].E3_options",
              "expandable": true,
              "expanded": false,
              "items": [
                "devices[].E3_options.precisionHalves",
                "devices[].E3_options.burningStateSensor",
                "devices[].E3_options.protectionSensor",
                "devices[].E3_options.zeroColdWaterSwitch",
                "devices[].E3_options.zeroColdPulseSwitch",
                "devices[].E3_options.smartVolumeSwitch",
                "devices[].E3_options.minTemp",
                "devices[].E3_options.maxTemp",
                "devices[].E3_options.tempStep"
              ]
            },
            {
              "key": "devices[].FA_options",
              "expandable": true,
              "expanded": false,
              "items": []
            },
            {
              "key": "devices[].FD_options",
              "expandable": true,
              "expanded": false,
              "items": []
            }
          ]
        }
      ]
    }
  ]
}
